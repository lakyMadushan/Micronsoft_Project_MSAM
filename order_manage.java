/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vidura samitha
 */
public class order_manage extends javax.swing.JFrame {

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat sdf1 = new SimpleDateFormat("hh.mm.ss.aa");
    Date d, d1;
    Icon icon = new javax.swing.ImageIcon(getClass().getResource("/dt/pics/suc.png"));
    Icon erricon = new javax.swing.ImageIcon(getClass().getResource("/dt/pics/cut.png"));

    /**
     * Creates new form order_manage
     */
    public order_manage() {
        initComponents();
        setDate();
        setTime();
        idLoad();
        jTextField3.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(173, 225, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("MSAM | Order Manager");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 94, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jList1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Id");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Order Id");

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Customer Name");

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField4FocusGained(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Contact");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Product Id");

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField5FocusGained(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
        });

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField6FocusGained(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("name");

        jTextField7.setEditable(false);
        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField7FocusGained(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Selling Price");

        jTextField8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField8FocusGained(evt);
            }
        });
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField8KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField8KeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Qty");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Amount");

        jTextField16.setEditable(false);
        jTextField16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField16.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField16FocusGained(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("Cus_id");

        jTextField17.setEditable(false);
        jTextField17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField17.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField17FocusGained(evt);
            }
        });
        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField17ActionPerformed(evt);
            }
        });

        jTextField18.setEditable(false);
        jTextField18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField18.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField18FocusGained(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setText("Cost");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setText("Stock");

        jTextField19.setEditable(false);
        jTextField19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField19.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField19FocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel4))
                            .addComponent(jTextField18))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel22)))
                            .addComponent(jTextField19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField17, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(283, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel21)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22)))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Order Id", "Cus_Id", "Cus Name", "Cus Contact", "Product Id", "Product Name", "Selling Price", "Qty", "Stock", "Amount", "Cost", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
            jTable1.getColumnModel().getColumn(10).setResizable(false);
            jTable1.getColumnModel().getColumn(11).setResizable(false);
            jTable1.getColumnModel().getColumn(12).setResizable(false);
            jTable1.getColumnModel().getColumn(13).setResizable(false);
        }

        jButton5.setBackground(new java.awt.Color(225, 31, 29));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Delete");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton5KeyPressed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(235, 168, 41));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Update");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(65, 58, 138));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Load All");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(194, 151, 105));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Clear All");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton7KeyPressed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(23, 184, 46));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Save");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jButton8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton8KeyPressed(evt);
            }
        });

        jButton2.setText("Remove Item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 323, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(16, 16, 16))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Sub Total");

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField9FocusGained(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Discount");

        jTextField11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField11KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField11KeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Less");

        jTextField12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField12KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField12KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField12KeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Net Total");

        jTextField13.setEditable(false);
        jTextField13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField13FocusGained(evt);
            }
        });
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Advanced");

        jTextField14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });
        jTextField14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField14KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField14KeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Net Amount");

        jTextField15.setEditable(false);
        jTextField15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField15FocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(21, 21, 21)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField14, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jTextField13)
                            .addComponent(jTextField12)
                            .addComponent(jTextField11)
                            .addComponent(jTextField15))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel14)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel18.setText("yyyy-MM-dd");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel19.setText("00.00.00");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19)
                .addGap(15, 15, 15))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel18)
                        .addComponent(jLabel19)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //delete
        if (jTextField1.getText().equals("0") || jTextField4.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Select The Row Before Delete !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        } else {

            JPasswordField passwordField = new JPasswordField(10);
            int option = JOptionPane.showConfirmDialog(null, passwordField, "Enter Password",
                    JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                String password = new String(passwordField.getPassword());
                if (password.equals("admin123")) {

                    Object[] options = {"Delete Selected Row", "Delete Order"};
                    int choice = JOptionPane.showOptionDialog(null, "Select an option:", "Confirmation",
                            JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
                            erricon, options, options[0]);

                    if (choice == 0) {
                        //Delete Selected Item
                        try {
                            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                            if (jTable1.getSelectedRow() != -1) {

                                String p_id = dtm.getValueAt(jTable1.getSelectedRow(), 5).toString();
                                Double qty = Double.parseDouble(dtm.getValueAt(jTable1.getSelectedRow(), 8).toString());
                                ResultSet rs = DB.search("select * from product_r where product_id = '" + p_id + "' ");
                                if (rs.next()) {
                                    Double db_qty = Double.parseDouble(rs.getString("qty"));
                                    DB.iud("update product_r set "
                                            + "qty = '" + (qty + db_qty) + "' where product_id = '" + p_id + "' ");
                                }
                            }
                            DB.iud("delete from p_order_item where id = '" + jTextField1.getText() + "' ");

                            JOptionPane.showMessageDialog(this, "Delete successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                            tableLoad();
                            jButton1.setEnabled(true);
                        } catch (Exception e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Delete Fail !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                        }

                    } else if (choice == 1) {
                        // Delete oder
                        try {

                            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                            if (jTable1.getSelectedRow() != -1) {

                                String o_id = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                                ResultSet rs = DB.search("select * from p_order_item where o_id = '" + o_id + "' ");
                                while (rs.next()) {
                                    String pid = rs.getString("p_id");
                                    Double qty = Double.parseDouble(rs.getString("qty"));
                                    ResultSet rs2 = DB.search("select * from product_r where product_id = '" + pid + "' ");
                                    if (rs2.next()) {
                                        Double db_qty = Double.parseDouble(rs2.getString("qty"));
                                        DB.iud("update product_r set "
                                                + "qty = '" + (qty + db_qty) + "' where product_id = '" + pid + "' ");
                                    }
                                }
                            }

                            DB.iud("delete from p_order_item where o_id = '" + jTextField2.getText() + "' ");
                            DB.iud("delete from p_order where o_id = '" + jTextField2.getText() + "' ");
                            JOptionPane.showMessageDialog(this, "Delete successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                            tableLoad();
                            jButton1.setEnabled(true);
                        } catch (Exception e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Delete Fail !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Invliid password !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //delete
            if (jTextField1.getText().equals("0") || jTextField4.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Select The Row Before Delete !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            } else {

                JPasswordField passwordField = new JPasswordField(10);
                int option = JOptionPane.showConfirmDialog(null, passwordField, "Enter Password",
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                if (option == JOptionPane.OK_OPTION) {
                    String password = new String(passwordField.getPassword());
                    if (password.equals("admin123")) {

                        Object[] options = {"Delete Selected Row", "Delete Order"};
                        int choice = JOptionPane.showOptionDialog(null, "Select an option:", "Confirmation",
                                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
                                erricon, options, options[0]);

                        if (choice == 0) {
                            //Delete Selected Item
                            try {
                                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                                if (jTable1.getSelectedRow() != -1) {

                                    String p_id = dtm.getValueAt(jTable1.getSelectedRow(), 5).toString();
                                    Double qty = Double.parseDouble(dtm.getValueAt(jTable1.getSelectedRow(), 8).toString());
                                    ResultSet rs = DB.search("select * from product_r where product_id = '" + p_id + "' ");
                                    if (rs.next()) {
                                        Double db_qty = Double.parseDouble(rs.getString("qty"));
                                        DB.iud("update product_r set "
                                                + "qty = '" + (qty + db_qty) + "' where product_id = '" + p_id + "' ");
                                    }
                                }
                                DB.iud("delete from p_order_item where id = '" + jTextField1.getText() + "' ");

                                JOptionPane.showMessageDialog(this, "Delete successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                                tableLoad();
                                jButton1.setEnabled(true);
                            } catch (Exception e) {
                                e.printStackTrace();
                                JOptionPane.showMessageDialog(this, "Delete Fail !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                            }

                        } else if (choice == 1) {
                            // Delete oder
                            try {

                                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                                if (jTable1.getSelectedRow() != -1) {

                                    String o_id = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                                    ResultSet rs = DB.search("select * from p_order_item where o_id = '" + o_id + "' ");
                                    while (rs.next()) {
                                        String pid = rs.getString("p_id");
                                        Double qty = Double.parseDouble(rs.getString("qty"));
                                        ResultSet rs2 = DB.search("select * from product_r where product_id = '" + pid + "' ");
                                        if (rs2.next()) {
                                            Double db_qty = Double.parseDouble(rs2.getString("qty"));
                                            DB.iud("update product_r set "
                                                    + "qty = '" + (qty + db_qty) + "' where product_id = '" + pid + "' ");
                                        }
                                    }
                                }
                                DB.iud("delete from p_order_item where o_id = '" + jTextField2.getText() + "' ");
                                DB.iud("delete from p_order where o_id = '" + jTextField2.getText() + "' ");
                                JOptionPane.showMessageDialog(this, "Delete successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                                tableLoad();
                                jButton1.setEnabled(true);
                            } catch (Exception e) {
                                e.printStackTrace();
                                JOptionPane.showMessageDialog(this, "Delete Fail !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                            }
                        }
                        jButton1.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Invliid password !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton5KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        //update
        try {
            if (jTextField1.getText().equals("0") || jTextField4.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Select Row", "DONE", JOptionPane.INFORMATION_MESSAGE, erricon);
            } else {
                JPasswordField passwordField = new JPasswordField(10);
                int option = JOptionPane.showConfirmDialog(null, passwordField, "Enter Password",
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                if (option == JOptionPane.OK_OPTION) {
                    String password = new String(passwordField.getPassword());
                    if (password.equals("admin123")) {

                        String qty = jTextField8.getText();
                        Double bps = Double.parseDouble(qty) * Double.parseDouble(jTextField18.getText());
                        Double sps = Double.parseDouble(qty) * Double.parseDouble(jTextField7.getText());
                        Double proft = sps - bps;
                        String p_id = jTextField5.getText();

                        //db oder  date time sub_total discount less net_total advance
                        DB.iud("update p_order set "
                                + "date = '" + jLabel18.getText() + "', time = '" + jLabel19.getText() + "', sub_total = '" + jTextField9.getText() + "' ,"
                                + "discount = '" + jTextField11.getText() + "',less = '" + jTextField12.getText() + "',net_total = '" + jTextField13.getText() + "',"
                                + "advance = '" + jTextField14.getText() + "' where o_id = '" + jTextField2.getText() + "' ");

                        //db oder item
                        ResultSet rs = DB.search("select * from p_order_item where id = '" + jTextField1.getText() + "' ");
                        if (rs.next()) { // date time p_id name qty cost sell_price bps sps profit
                            DB.iud("update p_order_item set "
                                    + " date = '" + jLabel18.getText() + "' ,time = '" + jLabel19.getText() + "' ,p_id = '" + p_id + "',"
                                    + "name = '" + jTextField6.getText() + "' ,qty = '" + qty + "' ,cost = '" + jTextField18.getText() + "',"
                                    + "sell_price = '" + jTextField7.getText() + "' ,bps = '" + bps + "' ,sps = '" + sps + "',"
                                    + "profit = '" + proft + "'  where id = '" + jTextField1.getText() + "' ");
                            JOptionPane.showMessageDialog(this, "Update successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                        } else {
                            DB.iud("insert into p_order_item (o_id,date,time,p_id,name,qty,cost,sell_price,bps,sps,profit,cus_id,cus_name,cus_contact) "
                                    + "values ( '" + jTextField2.getText() + "', '" + jLabel18.getText() + "','" + jLabel19.getText() + "','" + p_id + "','" + jTextField6.getText() + "','" + qty + "','" + jTextField18.getText() + "',"
                                    + "'" + jTextField7.getText() + "','" + bps + "','" + sps + "','" + proft + "','" + jTextField17.getText() + "','" + jTextField3.getText() + "','" + jTextField4.getText() + "' )");
                            JOptionPane.showMessageDialog(this, "Insert new Value successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                        }

                        //db product
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        Double dqty = Double.parseDouble(qty); //qty jtext8 value
                        Double dtqty = Double.parseDouble(dtm.getValueAt(jTable1.getSelectedRow(), 8).toString()); //table slected raw qty

                        try {

                            Double db_qty = Double.parseDouble(rs.getString("qty"));
                            if (p_id.equals(dtm.getValueAt(jTable1.getSelectedRow(), 5).toString())) {
                                ResultSet r2 = DB.search("select * from product_r where product_id = '" + p_id + "' ");
                                if (r2.next()) {
                                    Double p_rqty = Double.parseDouble(r2.getString("qty"));
                                    if (dqty > dtqty) {
                                        Double temp = dqty - dtqty;
                                        Double t = p_rqty - temp;
                                        DB.iud("update product_r set "
                                                + "qty = '" + t + "' where product_id = '" + p_id + "' ");

                                    } else if (dqty < dtqty) {
                                        Double temp = dtqty - dqty;
                                        Double t = p_rqty + temp;
                                        DB.iud("update product_r set "
                                                + "qty = '" + t + "' where product_id = '" + p_id + "' ");

                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Product can't find !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                                }
                            } else {
                                ResultSet rr2 = DB.search("select * from product_r where product_id = '" + p_id + "' ");
                                if (rr2.next()) {
                                    Double p_rqty = Double.parseDouble(rr2.getString("qty"));
                                    Double t = p_rqty + dtqty;
                                    Double old = Double.parseDouble(dtm.getValueAt(jTable1.getSelectedRow(), 5).toString());
                                    DB.iud("update product_r set "
                                            + "qty = '" + t + "' where product_id = '" + old + "' ");
                                }
                                ResultSet rr3 = DB.search("select * from product_r where product_id = '" + jTextField5.getText() + "' ");
                                if (rr2.next()) {
                                    Double p_rqty = Double.parseDouble(rr3.getString("qty"));
                                    Double tt = p_rqty - dqty;
                                    DB.iud("update product_r set "
                                            + "qty = '" + tt + "' where product_id = '" + p_id + "' ");
                                }

                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Product can't find !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                        }

                        JOptionPane.showMessageDialog(this, "Update successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                        tableLoad();
                        //coun_comboLoad();
                        jButton1.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Invliid password !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //update
            try {
                if (jTextField1.getText().equals("0") || jTextField4.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Select Row", "DONE", JOptionPane.INFORMATION_MESSAGE, erricon);
                } else {
                    JPasswordField passwordField = new JPasswordField(10);
                    int option = JOptionPane.showConfirmDialog(null, passwordField, "Enter Password",
                            JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                    if (option == JOptionPane.OK_OPTION) {
                        String password = new String(passwordField.getPassword());
                        if (password.equals("admin123")) {

                            String qty = jTextField8.getText();
                            Double bps = Double.parseDouble(qty) * Double.parseDouble(jTextField18.getText());
                            Double sps = Double.parseDouble(qty) * Double.parseDouble(jTextField7.getText());
                            Double proft = sps - bps;
                            String p_id = jTextField5.getText();

                            //db oder  date time sub_total discount less net_total advance
                            DB.iud("update p_order set "
                                    + "date = '" + jLabel18.getText() + "', time = '" + jLabel19.getText() + "', sub_total = '" + jTextField9.getText() + "' ,"
                                    + "discount = '" + jTextField11.getText() + "',less = '" + jTextField12.getText() + "',net_total = '" + jTextField13.getText() + "',"
                                    + "advance = '" + jTextField14.getText() + "' where o_id = '" + jTextField2.getText() + "' ");

                            //db oder item
                            ResultSet rs = DB.search("select * from p_order_item where id = '" + jTextField1.getText() + "' ");
                            if (rs.next()) { // date time p_id name qty cost sell_price bps sps profit
                                DB.iud("update p_order_item set "
                                        + " date = '" + jLabel18.getText() + "' ,time = '" + jLabel19.getText() + "' ,p_id = '" + p_id + "',"
                                        + "name = '" + jTextField6.getText() + "' ,qty = '" + qty + "' ,cost = '" + jTextField18.getText() + "',"
                                        + "sell_price = '" + jTextField7.getText() + "' ,bps = '" + bps + "' ,sps = '" + sps + "',"
                                        + "profit = '" + proft + "'  where id = '" + jTextField1.getText() + "' ");
                                JOptionPane.showMessageDialog(this, "Update successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                            } else {
                                DB.iud("insert into p_order_item (o_id,date,time,p_id,name,qty,cost,sell_price,bps,sps,profit,cus_id,cus_name,cus_contact) "
                                        + "values ( '" + jTextField2.getText() + "', '" + jLabel18.getText() + "','" + jLabel19.getText() + "','" + p_id + "','" + jTextField6.getText() + "','" + qty + "','" + jTextField18.getText() + "',"
                                        + "'" + jTextField7.getText() + "','" + bps + "','" + sps + "','" + proft + "','" + jTextField17.getText() + "','" + jTextField3.getText() + "','" + jTextField4.getText() + "' )");
                                JOptionPane.showMessageDialog(this, "Insert new Value successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                            }

                            //db product
//                            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
//                            Double dqty = Double.parseDouble(qty);
//                            Double dtqty = Double.parseDouble(dtm.getValueAt(jTable1.getSelectedRow(), 8).toString());
//                            try {
//                                DB.search("select * from product_r where product_id = '" + p_id + "' ");
//                                Double db_qty = Double.parseDouble(rs.getString("qty"));
//                                if (p_id.equals(dtm.getValueAt(jTable1.getSelectedRow(), 5).toString())) {
//                                    if (dqty > dtqty) {
//                                        Double temp = dqty - dtqty;
//                                        Double t = db_qty + temp;
//                                        DB.iud("update product_r set "
//                                                + "qty = '" + t + "' where product_id = '" + p_id + "' ");
//                                    } else if (dqty < dtqty) {
//                                        Double temp = dtqty - dqty;
//                                        Double t = db_qty + temp;
//                                        DB.iud("update product_r set "
//                                                + "qty = '" + t + "' where product_id = '" + p_id + "' ");
//                                    }
//                                } else {
//                                    Double t = db_qty + dtqty;
//                                    Double old = Double.parseDouble(dtm.getValueAt(jTable1.getSelectedRow(), 5).toString());
//                                    DB.iud("update product_r set "
//                                            + "qty = '" + t + "' where product_id = '" + old + "' ");
//
//                                    Double tt = db_qty - Double.parseDouble(qty);
//                                    DB.iud("update product_r set "
//                                            + "qty = '" + tt + "' where product_id = '" + p_id + "' ");
//                                }
//                            } catch (Exception e) {
//                                JOptionPane.showMessageDialog(this, "Product can't find !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
//                            }
                            JOptionPane.showMessageDialog(this, "Update successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                            tableLoad();
                            //coun_comboLoad();
                            jButton1.setEnabled(true);
                        } else {
                            JOptionPane.showMessageDialog(this, "Invliid password !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tableLoad();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tableLoad();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        clear();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton7KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clear();
        }
    }//GEN-LAST:event_jButton7KeyPressed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //save
        try {
            if (jTextField4.getText().equals("")) {
                jTextField3.grabFocus();
                JOptionPane.showMessageDialog(this, "Please Enter Data Before The Save !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            } else {

                //save order
                DB.iud("insert into p_order (o_id,date,time,cus_name,cus_id,sub_total,discount,less,net_total,advance,user) values "
                        + "( '" + jTextField2.getText() + "', '" + jLabel18.getText() + "', '" + jLabel19.getText() + "', '" + jTextField3.getText() + "',"
                        + " '" + jTextField17.getText() + "', '" + jTextField9.getText() + "', '" + jTextField11.getText() + "', '" + jTextField12.getText() + "', '" + jTextField13.getText() + "', '" + jTextField14.getText() + "', '" + "abcsample" + "' ) ");

                // Inset order item & update product
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                for (int i = 0; i < dtm.getRowCount(); i++) {

                    String o_id = dtm.getValueAt(i, 1).toString();
                    String date = dtm.getValueAt(i, 12).toString();
                    String time = dtm.getValueAt(i, 13).toString();
                    String p_id = dtm.getValueAt(i, 5).toString();
                    String p_name = dtm.getValueAt(i, 6).toString();
                    String qty = dtm.getValueAt(i, 8).toString();
                    String sell_p = dtm.getValueAt(i, 7).toString();
                    String cost = dtm.getValueAt(i, 11).toString();
                    String bps = Double.toString(Double.parseDouble(cost) * Double.parseDouble(qty));
                    String sps = dtm.getValueAt(i, 10).toString();
                    String profit = Double.toString(Double.parseDouble(sps) - Double.parseDouble(bps));
                    String cus_id = dtm.getValueAt(i, 2).toString();
                    String cus_name = dtm.getValueAt(i, 3).toString();
                    String cus_con = dtm.getValueAt(i, 4).toString();
                    String stock = dtm.getValueAt(i, 9).toString();
                    Double upqty = Double.parseDouble(stock);

                    DB.iud("insert into p_order_item (o_id,date,time,p_id,name,qty,cost,sell_price,bps,sps,profit,cus_id,cus_name,cus_contact) "
                            + "values ( '" + o_id + "', '" + date + "','" + time + "','" + p_id + "','" + p_name + "','" + qty + "','" + cost + "',"
                            + "'" + sell_p + "','" + bps + "','" + sps + "','" + profit + "','" + cus_id + "','" + cus_name + "','" + cus_con + "' )");

                    upqty = upqty - Double.parseDouble(qty);
                    DB.iud("update product_r set "
                            + "qty = '" + upqty + "' where product_id = '" + p_id + "' ");
                }

                JOptionPane.showMessageDialog(this, "Insert successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextField9.setText("");
                //jTextField10.setText("");
                jTextField11.setText("");
                jTextField12.setText("");
                jTextField13.setText("");
                jTextField14.setText("");
                jTextField15.setText("");
                jTextField16.setText("");
                jTextField17.setText("");
                jTextField18.setText("");
                jTextField19.setText("");
                tableLoad();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton8KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //save
            try {
                if (jTextField4.getText().equals("")) {
                    jTextField3.grabFocus();
                    JOptionPane.showMessageDialog(this, "Please Enter Data Before The Save !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                } else {

                    //save order
                    DB.iud("insert into p_order (o_id,date,time,cus_name,cus_id,sub_total,discount,less,net_total,advance,user) values "
                            + "( '" + jTextField2.getText() + "', '" + jLabel18.getText() + "', '" + jLabel19.getText() + "', '" + jTextField3.getText() + "',"
                            + " '" + jTextField17.getText() + "', '" + jTextField9.getText() + "', '" + jTextField11.getText() + "', '" + jTextField12.getText() + "', '" + jTextField13.getText() + "', '" + jTextField14.getText() + "', '" + "abcsample" + "' ) ");

                    // Inset order item & update product
                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    for (int i = 0; i < dtm.getRowCount(); i++) {

                        String o_id = dtm.getValueAt(i, 1).toString();
                        String date = dtm.getValueAt(i, 12).toString();
                        String time = dtm.getValueAt(i, 13).toString();
                        String p_id = dtm.getValueAt(i, 5).toString();
                        String p_name = dtm.getValueAt(i, 6).toString();
                        String qty = dtm.getValueAt(i, 8).toString();
                        String sell_p = dtm.getValueAt(i, 7).toString();
                        String cost = dtm.getValueAt(i, 11).toString();
                        String bps = Double.toString(Double.parseDouble(cost) * Double.parseDouble(qty));
                        String sps = dtm.getValueAt(i, 10).toString();
                        String profit = Double.toString(Double.parseDouble(sps) - Double.parseDouble(bps));
                        String cus_id = dtm.getValueAt(i, 2).toString();
                        String cus_name = dtm.getValueAt(i, 3).toString();
                        String cus_con = dtm.getValueAt(i, 4).toString();
                        String stock = dtm.getValueAt(i, 9).toString();
                        Double upqty = Double.parseDouble(stock);

                        DB.iud("insert into p_order_item (o_id,date,time,p_id,name,qty,cost,sell_price,bps,sps,profit,cus_id,cus_name,cus_contact) "
                                + "values ( '" + o_id + "', '" + date + "','" + time + "','" + p_id + "','" + p_name + "','" + qty + "','" + cost + "',"
                                + "'" + sell_p + "','" + bps + "','" + sps + "','" + profit + "','" + cus_id + "','" + cus_name + "','" + cus_con + "' )");

                        upqty = upqty - Double.parseDouble(qty);
                        DB.iud("update product_r set "
                                + "qty = '" + upqty + "' where product_id = '" + p_id + "' ");
                    }

                    JOptionPane.showMessageDialog(this, "Insert successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                    jTextField2.setText("");
                    jTextField3.setText("");
                    jTextField4.setText("");
                    jTextField9.setText("");
                    //jTextField10.setText("");
                    jTextField11.setText("");
                    jTextField12.setText("");
                    jTextField13.setText("");
                    jTextField14.setText("");
                    jTextField15.setText("");
                    jTextField16.setText("");
                    jTextField17.setText("");
                    jTextField18.setText("");
                    jTextField19.setText("");
                    tableLoad();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton8KeyPressed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    @SuppressWarnings("unchecked")
    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        try {
            ResultSet rs = DB.search("select * from customer where name like '%" + jTextField3.getText() + "%' order by id asc ");
            Vector v = new Vector();
            while (rs.next()) {
                v.add(rs.getString("id") + "##" + rs.getString("name") + "-" + rs.getString("country") + "-" + rs.getString("contact") + "-" + rs.getString("email"));
            }
            jList1.setListData(v);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        try {
            ResultSet rs = DB.search("select * from customer where contact like '%" + jTextField4.getText() + "%' order by id asc ");
            Vector v = new Vector();
            while (rs.next()) {
                v.add(rs.getString("id") + "##" + rs.getString("name") + "-" + rs.getString("country") + "-" + rs.getString("contact") + "-" + rs.getString("email"));
            }
            jList1.setListData(v);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        try {
            ResultSet rs = DB.search("select * from product_r where product_id like '%" + jTextField5.getText() + "%' order by id asc ");
            Vector v = new Vector();
            while (rs.next()) {
                v.add(rs.getString("id") + "##" + rs.getString("product_id") + "_" + rs.getString("name") + "_" + rs.getString("cost") + "_" + rs.getString("selling_price") + "_" + rs.getString("qty"));
            }
            jList1.setListData(v);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyReleased
        try {
            ResultSet rs = DB.search("select * from product_r where name like '%" + jTextField6.getText() + "%' order by id asc ");
            Vector v = new Vector();
            while (rs.next()) {
                v.add(rs.getString("id") + "##" + rs.getString("product_id") + "_" + rs.getString("name") + "_" + rs.getString("cost") + "_" + rs.getString("selling_price") + "_" + rs.getString("qty"));
            }
            jList1.setListData(v);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTextField6KeyReleased

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField3.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField7FocusGained
        jTextField3.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField7FocusGained

    private void jTextField16FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField16FocusGained
        jTextField3.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField16FocusGained

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        if (jTextField2.getText().equals("")) {
            jTextField3.grabFocus();
            JOptionPane.showMessageDialog(this, "Please Enter Order Id !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        }
    }//GEN-LAST:event_jTextField3FocusGained

    private void jTextField4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusGained
        if (jTextField2.getText().equals("")) {
            jTextField3.grabFocus();
            JOptionPane.showMessageDialog(this, "Please Enter Order Id !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        }
    }//GEN-LAST:event_jTextField4FocusGained

    private void jTextField5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusGained
        if (jTextField3.getText().equals("")) {
            jTextField3.grabFocus();
            JOptionPane.showMessageDialog(this, "Please Enter Customer Name !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        }
    }//GEN-LAST:event_jTextField5FocusGained

    private void jTextField6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField6FocusGained
        if (jTextField3.getText().equals("")) {
            jTextField3.grabFocus();
            JOptionPane.showMessageDialog(this, "Please Enter Customer Name !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        }
    }//GEN-LAST:event_jTextField6FocusGained

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        if (Character.isDigit(evt.getKeyChar())) {
            JOptionPane.showMessageDialog(this, "Only Valid Text !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '+' && evt.getKeyChar() != KeyEvent.VK_ENTER) {
            JOptionPane.showMessageDialog(this, "Only Valid Numbers And + Mark!", "ERROR", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
        if (Character.isDigit(evt.getKeyChar())) {
            JOptionPane.showMessageDialog(this, "Only Valid Text !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jTextField8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != KeyEvent.VK_ENTER && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            JOptionPane.showMessageDialog(this, "Only Valid digits And Enter!", "ERROR", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField8KeyTyped

    private void jTextField8FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField8FocusGained
        if (jTextField7.getText().equals("")) {
            jTextField5.grabFocus();
            JOptionPane.showMessageDialog(this, "Please Enter Product Id !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        }
    }//GEN-LAST:event_jTextField8FocusGained

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (jTextField3.getText().equals("") || jTextField5.getText().equals("")) {
            Object selectedValue = jList1.getSelectedValue();
            if (selectedValue != null) {
                //((DefaultTableModel) jTable1.getModel()).setNumRows(0);
                String[] parts = selectedValue.toString().split("##");
                if (parts.length >= 2) {

                    String[] pt2 = parts[1].split("-");
                    jTextField3.setText(pt2[0]);

                    jTextField4.setText(pt2[2]);
                    jTextField17.setText(parts[0]);
                    jList1.setListData(new String[0]);

                    // search allready cus
                    try {
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.setRowCount(0);
                        ResultSet rs = DB.search("select * from p_order_item where cus_id = '" + parts[0] + "'  ");
                        while (rs.next()) {
                            Vector<Object> v = new Vector<>();
                            v.add(rs.getString("id"));
                            v.add(rs.getString("o_id"));
                            v.add(rs.getString("cus_id"));
                            v.add(rs.getString("cus_name"));
                            v.add(rs.getString("cus_contact"));
                            v.add(rs.getString("p_id"));
                            v.add(rs.getString("name"));
                            v.add(rs.getString("sell_price"));
                            v.add(rs.getString("qty"));
                            v.add("");
                            v.add(Double.toString(Double.parseDouble(rs.getString("sell_price")) * Double.parseDouble(rs.getString("qty"))));//amount
                            v.add(rs.getString("cost"));
                            v.add(rs.getString("date"));
                            v.add(rs.getString("time"));
                            dtm.addRow(v);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    jTextField5.requestFocus();
                }
            }
        } else if (jTextField7.getText().equals("") && (!jTextField3.getText().equals(""))) {
            Object selectedValue = jList1.getSelectedValue();
            if (selectedValue != null) {
                //((DefaultTableModel) jTable1.getModel()).setNumRows(0);
                String[] parts = selectedValue.toString().split("##");
                if (parts.length >= 2) {

                    String[] pt2 = parts[1].split("_");
                    jTextField5.setText(pt2[0]);
                    jTextField18.setText(pt2[2]);
                    jTextField6.setText(pt2[1]);
                    jTextField7.setText(pt2[3]);
                    jTextField19.setText(pt2[4]);
                    jList1.setListData(new String[0]);

                    // search allready cus
//                    try {
//                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
//                        dtm.setRowCount(0);
//                        ResultSet rs = DB.search("select * from p_order_item where cus_id = '" + parts[0] + "'  ");
//                        while (rs.next()) {
//                            Vector<Object> v = new Vector<>();
//                            v.add(rs.getString("id"));
//                            v.add(rs.getString("o_id"));
//                            v.add(rs.getString("cus_id"));
//                            v.add(rs.getString("cus_name"));
//                            v.add(rs.getString("cus_contact"));
//                            v.add(rs.getString("p_id"));
//                            v.add(rs.getString("name"));
//                            v.add(rs.getString("sell_price"));
//                            v.add(rs.getString("qty"));
//                            v.add("");
//                            v.add(Double.toString(Double.parseDouble(rs.getString("sell_price")) * Double.parseDouble(rs.getString("qty"))));//amount
//                            v.add(rs.getString("cost"));
//                            v.add(rs.getString("date"));
//                            v.add(rs.getString("time"));
//                            dtm.addRow(v);
//                        }
//                    } catch (Exception e) {
//                        e.printStackTrace();
//                    }
                    jTextField8.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jTextField4.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jList1.grabFocus();
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jTextField5.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jList1.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jTextField3.grabFocus();
        }
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jTextField8.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jList1.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jTextField5.grabFocus();
        }
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jTextField6.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jList1.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jTextField4.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            jTextField11.grabFocus();
        }
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyPressed
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            Vector<Object> v = new Vector<>();
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                v.add("");
                v.add(jTextField2.getText());
                v.add(jTextField17.getText());
                v.add(jTextField3.getText());
                v.add(jTextField4.getText());
                v.add(jTextField5.getText());
                v.add(jTextField6.getText());
                v.add(jTextField7.getText());
                v.add(jTextField8.getText());
                v.add(jTextField19.getText());
                v.add(jTextField16.getText());
                v.add(jTextField18.getText());
                v.add(jLabel18.getText());
                v.add(jLabel19.getText());
                dtm.addRow(v);

                jTextField5.setText("");
                jTextField6.setText("");
                jTextField7.setText("");
                jTextField8.setText("");
                jTextField16.setText("");
                jTextField18.setText("");
                jTextField19.setText("");
                jTextField5.requestFocus();

                // net total
                double sum = 0;
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    sum += Double.parseDouble(jTable1.getValueAt(i, 10).toString());
                }
                //jTextField10.setText(Double.toString(sum));
                jTextField9.setText(Double.toString(sum));

                // discount & less
                if (!jTextField11.getText().equals("")) {
                    jTextField12.setText(Double.toString((Double.parseDouble(jTextField9.getText()) * Double.parseDouble(jTextField11.getText())) / 100));
                    jTextField13.setText(Double.toString(Double.parseDouble(jTextField9.getText()) - Double.parseDouble(jTextField12.getText())));
                }
                // advance
                if (!jTextField14.getText().equals("")) {
                    jTextField15.setText(Double.toString(Double.parseDouble(jTextField13.getText()) - Double.parseDouble(jTextField14.getText())));
                }

            } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
                jTextField6.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTextField8KeyPressed

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jTextField3.getText().equals("") || jTextField5.getText().equals("")) {
                Object selectedValue = jList1.getSelectedValue();
                if (selectedValue != null) {
                    //((DefaultTableModel) jTable1.getModel()).setNumRows(0);
                    String[] parts = selectedValue.toString().split("##");
                    if (parts.length >= 2) {

                        String[] pt2 = parts[1].split("-");
                        jTextField3.setText(pt2[0]);

                        jTextField4.setText(pt2[2]);
                        jTextField17.setText(parts[0]);
                        jList1.setListData(new String[0]);

                        // search allready cus
                        try {
                            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                            dtm.setRowCount(0);
                            ResultSet rs = DB.search("select * from p_order_item where cus_id = '" + parts[0] + "'  ");
                            while (rs.next()) {
                                Vector<Object> v = new Vector<>();
                                v.add(rs.getString("id"));
                                v.add(rs.getString("o_id"));
                                v.add(rs.getString("cus_id"));
                                v.add(rs.getString("cus_name"));
                                v.add(rs.getString("cus_contact"));
                                v.add(rs.getString("p_id"));
                                v.add(rs.getString("name"));
                                v.add(rs.getString("sell_price"));
                                v.add(rs.getString("qty"));
                                v.add("");
                                v.add(Double.toString(Double.parseDouble(rs.getString("sell_price")) * Double.parseDouble(rs.getString("qty"))));//amount
                                v.add(rs.getString("cost"));
                                v.add(rs.getString("date"));
                                v.add(rs.getString("time"));
                                dtm.addRow(v);
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        jTextField5.requestFocus();
                    }
                }
            } else if (jTextField7.getText().equals("") && (!jTextField3.getText().equals(""))) {
                Object selectedValue = jList1.getSelectedValue();
                if (selectedValue != null) {
                    //((DefaultTableModel) jTable1.getModel()).setNumRows(0);
                    String[] parts = selectedValue.toString().split("##");
                    if (parts.length >= 2) {

                        String[] pt2 = parts[1].split("_");
                        jTextField5.setText(pt2[0]);
                        jTextField18.setText(pt2[2]);
                        jTextField6.setText(pt2[1]);
                        jTextField7.setText(pt2[3]);
                        jTextField19.setText(pt2[4]);
                        jList1.setListData(new String[0]);

                        // search allready cus
//                        try {
//                            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
//                            dtm.setRowCount(0);
//                            ResultSet rs = DB.search("select * from p_order_item where cus_id = '" + parts[0] + "'  ");
//                            while (rs.next()) {
//                                Vector<Object> v = new Vector<>();
//                                v.add(rs.getString("id"));
//                                v.add(rs.getString("o_id"));
//                                v.add(rs.getString("cus_id"));
//                                v.add(rs.getString("cus_name"));
//                                v.add(rs.getString("cus_contact"));
//                                v.add(rs.getString("p_id"));
//                                v.add(rs.getString("name"));
//                                v.add(rs.getString("sell_price"));
//                                v.add(rs.getString("qty"));
//                                v.add("");
//                                v.add(Double.toString(Double.parseDouble(rs.getString("sell_price")) * Double.parseDouble(rs.getString("qty"))));//amount
//                                v.add(rs.getString("cost"));
//                                v.add(rs.getString("date"));
//                                v.add(rs.getString("time"));
//                                dtm.addRow(v);
//                            }
//                        } catch (Exception e) {
//                            e.printStackTrace();
//                        }
                        jTextField8.requestFocus();
                    }
                }
            }
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField17ActionPerformed

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        jTextField3.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField17FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField17FocusGained
        jTextField3.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField17FocusGained

    private void jTextField8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyReleased
        if (!jTextField8.getText().equals("")) {
            if (Integer.parseInt(jTextField19.getText()) >= Integer.parseInt(jTextField8.getText())) {
                try {
                    jTextField16.setText(Double.toString(Double.parseDouble(jTextField7.getText()) * Double.parseDouble(jTextField8.getText())));
                    jTextField9.setText(Double.toString(Double.parseDouble(jTextField9.getText()) + Double.parseDouble(jTextField16.getText()))); //9 before 10 jtext

                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    if (jTable1.getSelectedRow() != -1) {

                        Double selcted = Double.parseDouble(dtm.getValueAt(jTable1.getSelectedRow(), 10).toString());
                        // net total
                        double sum = 0;
                        for (int i = 0; i < jTable1.getRowCount(); i++) {
                            sum += Double.parseDouble(jTable1.getValueAt(i, 10).toString());
                        }
                        Double am = Double.parseDouble(jTextField16.getText());
                        //jTextField10.setText(Double.toString((sum - selcted) + am));
                        jTextField9.setText(Double.toString((sum - selcted) + am));

                        // discount & less
                        if (!jTextField11.getText().equals("")) {
                            jTextField12.setText(Double.toString((Double.parseDouble(jTextField9.getText()) * Double.parseDouble(jTextField11.getText())) / 100));
                            jTextField13.setText(Double.toString(Double.parseDouble(jTextField9.getText()) - Double.parseDouble(jTextField12.getText())));
                        }
                        // advance
                        if (!jTextField14.getText().equals("")) {
                            jTextField15.setText(Double.toString(Double.parseDouble(jTextField13.getText()) - Double.parseDouble(jTextField14.getText())));
                        }

                        //
                    }

                } catch (NumberFormatException e) {
//                e.printStackTrace();
                }
            }else {
                JOptionPane.showMessageDialog(this, "Not Enough Stock !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                jTextField8.setText("");
            }

        } else {
            System.out.println("jtext 8 is emty");
            // Handle the case when jTextField8 is empty
        }

    }//GEN-LAST:event_jTextField8KeyReleased

    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased
        jTextField12.setText(Double.toString((Double.parseDouble(jTextField9.getText()) * Double.parseDouble(jTextField11.getText())) / 100));
        jTextField13.setText(Double.toString(Double.parseDouble(jTextField9.getText()) - Double.parseDouble(jTextField12.getText())));
    }//GEN-LAST:event_jTextField11KeyReleased

    private void jTextField12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyReleased
        jTextField11.setText(Double.toString((Double.parseDouble(jTextField12.getText()) * 100) / Double.parseDouble(jTextField9.getText())));
        jTextField13.setText(Double.toString(Double.parseDouble(jTextField9.getText()) - Double.parseDouble(jTextField12.getText())));
    }//GEN-LAST:event_jTextField12KeyReleased

    private void jTextField14KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyReleased
        jTextField15.setText(Double.toString(Double.parseDouble(jTextField13.getText()) - Double.parseDouble(jTextField14.getText())));
    }//GEN-LAST:event_jTextField14KeyReleased

    private void jTextField9FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField9FocusGained
        jTextField11.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField9FocusGained

    private void jTextField13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField13FocusGained
        jTextField11.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField13FocusGained

    private void jTextField15FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField15FocusGained
        jTextField11.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField15FocusGained

    private void jTextField18FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField18FocusGained
        jTextField3.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField18FocusGained

    private void jTextField19FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField19FocusGained
        jTextField3.grabFocus();
        JOptionPane.showMessageDialog(this, "Can't Edit This !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField19FocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            if (jTable1.getSelectedRow() != -1) {
                dtm.removeRow(jTable1.getSelectedRow());

                // net total
                double sum = 0;
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    sum += Double.parseDouble(jTable1.getValueAt(i, 10).toString());
                }
                //jTextField10.setText(Double.toString(sum));
                jTextField9.setText(Double.toString(sum));

                // discount & less
                if (!jTextField11.getText().equals("")) {
                    jTextField12.setText(Double.toString((Double.parseDouble(jTextField9.getText()) * Double.parseDouble(jTextField11.getText())) / 100));
                    jTextField13.setText(Double.toString(Double.parseDouble(jTextField9.getText()) - Double.parseDouble(jTextField12.getText())));
                }
                // advance
                if (!jTextField14.getText().equals("")) {
                    jTextField15.setText(Double.toString(Double.parseDouble(jTextField13.getText()) - Double.parseDouble(jTextField14.getText())));
                }

            } else {
                JOptionPane.showMessageDialog(this, "Please Selecet Item Row !", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            System.out.println("Invalid number format");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            if (jTable1.getSelectedRow() != -1) {

                String id = dtm.getValueAt(jTable1.getSelectedRow(), 0).toString();
                String o_id = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                String cus_id = dtm.getValueAt(jTable1.getSelectedRow(), 2).toString();
                String cus_name = dtm.getValueAt(jTable1.getSelectedRow(), 3).toString();
                String cus_con = dtm.getValueAt(jTable1.getSelectedRow(), 4).toString();
                String p_id = dtm.getValueAt(jTable1.getSelectedRow(), 5).toString();
                String P_name = dtm.getValueAt(jTable1.getSelectedRow(), 6).toString();
                String s_price = dtm.getValueAt(jTable1.getSelectedRow(), 7).toString();
                String qty = dtm.getValueAt(jTable1.getSelectedRow(), 8).toString();
                String stock = dtm.getValueAt(jTable1.getSelectedRow(), 9).toString();
                String amount = dtm.getValueAt(jTable1.getSelectedRow(), 10).toString();
                String cost = dtm.getValueAt(jTable1.getSelectedRow(), 11).toString();

                jTextField1.setText(id);
                jTextField2.setText(o_id);
                jTextField17.setText(cus_id);
                jTextField3.setText(cus_name);
                jTextField4.setText(cus_con);
                jTextField5.setText(p_id);
                jTextField6.setText(P_name);
                jTextField7.setText(s_price);
                jTextField8.setText(qty);
                jTextField16.setText(amount);
                jTextField18.setText(cost);
                jTextField19.setText(stock);

                ResultSet rs = DB.search("select * from p_order where o_id = '" + o_id + "'  ");
                if (rs.next()) {
                    jTextField9.setText(rs.getString("sub_total"));
                    //jTextField10.setText(rs.getString("net_total"));
                    jTextField11.setText(rs.getString("discount"));
                    jTextField12.setText(rs.getString("less"));
                    jTextField13.setText(rs.getString("net_total"));//net amount
                    jTextField14.setText(rs.getString("advance"));
                    jTextField15.setText(Double.toString(Double.parseDouble(jTextField13.getText()) - Double.parseDouble(jTextField14.getText())));//due
                }

                jButton1.setEnabled(false);
            } else {
                System.out.println("No data found for ID: " + jTextField1.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                if (jTable1.getSelectedRow() != -1) {

                    String id = dtm.getValueAt(jTable1.getSelectedRow(), 0).toString();
                    String o_id = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                    String cus_id = dtm.getValueAt(jTable1.getSelectedRow(), 2).toString();
                    String cus_name = dtm.getValueAt(jTable1.getSelectedRow(), 3).toString();
                    String cus_con = dtm.getValueAt(jTable1.getSelectedRow(), 4).toString();
                    String p_id = dtm.getValueAt(jTable1.getSelectedRow(), 5).toString();
                    String P_name = dtm.getValueAt(jTable1.getSelectedRow(), 6).toString();
                    String s_price = dtm.getValueAt(jTable1.getSelectedRow(), 7).toString();
                    String qty = dtm.getValueAt(jTable1.getSelectedRow(), 8).toString();
                    String stock = dtm.getValueAt(jTable1.getSelectedRow(), 9).toString();
                    String amount = dtm.getValueAt(jTable1.getSelectedRow(), 10).toString();
                    String cost = dtm.getValueAt(jTable1.getSelectedRow(), 11).toString();

                    jTextField1.setText(id);
                    jTextField2.setText(o_id);
                    jTextField17.setText(cus_id);
                    jTextField3.setText(cus_name);
                    jTextField4.setText(cus_con);
                    jTextField5.setText(p_id);
                    jTextField6.setText(P_name);
                    jTextField7.setText(s_price);
                    jTextField8.setText(qty);
                    jTextField16.setText(amount);
                    jTextField18.setText(cost);
                    jTextField19.setText(stock);

                    ResultSet rs = DB.search("select * from p_order where o_id = '" + o_id + "'  ");
                    if (rs.next()) {
                        jTextField9.setText(rs.getString("sub_total"));
                        //jTextField10.setText(rs.getString("net_total"));
                        jTextField11.setText(rs.getString("discount"));
                        jTextField12.setText(rs.getString("less"));
                        jTextField13.setText(rs.getString("net_total"));//net amount
                        jTextField14.setText(rs.getString("advance"));
                        jTextField15.setText(Double.toString(Double.parseDouble(jTextField13.getText()) - Double.parseDouble(jTextField14.getText())));//due
                    }

                    jButton1.setEnabled(false);
                } else {
                    System.out.println("No data found for ID: " + jTextField1.getText());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTextField11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != KeyEvent.VK_ENTER && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            JOptionPane.showMessageDialog(this, "Valid digits ,  And Enter Only !", "ERROR", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField11KeyTyped

    private void jTextField12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != KeyEvent.VK_ENTER && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() != '.') {
            JOptionPane.showMessageDialog(this, "Valid digits , '.'  And Enter Only !", "ERROR", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField12KeyTyped

    private void jTextField14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != KeyEvent.VK_ENTER && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() != '.') {
            JOptionPane.showMessageDialog(this, "Valid digits , '.'  And Enter Only !", "ERROR", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField14KeyTyped

    private void jTextField11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextField14.requestFocus();
        }
    }//GEN-LAST:event_jTextField11KeyPressed

    private void jTextField12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextField14.requestFocus();
        }
    }//GEN-LAST:event_jTextField12KeyPressed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(order_manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(order_manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(order_manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(order_manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new order_manage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    private void tableLoad() {
        try {
            clear();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.search("select * from p_order_item");
            while (rs.next()) {
                Vector<Object> v = new Vector<>();
                v.add(rs.getString("id"));
                v.add(rs.getString("o_id"));
                v.add(rs.getString("cus_id"));
                v.add(rs.getString("cus_name"));
                v.add(rs.getString("cus_contact"));
                v.add(rs.getString("p_id"));
                v.add(rs.getString("name"));
                v.add(rs.getString("sell_price"));
                v.add(rs.getString("qty"));
                v.add("");
                v.add(Double.parseDouble(rs.getString("sell_price")) * Double.parseDouble(rs.getString("qty")));//ammount
                v.add(rs.getString("cost"));//cost
                v.add(rs.getString("date"));
                v.add(rs.getString("time"));
                dtm.addRow(v);
            }
            jButton1.setEnabled(true);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Table loading Unsuccesfully !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        }
    }

    private void clear() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        //jTextField10.setText("");
        jTextField11.setText("");
        jTextField12.setText("");
        jTextField13.setText("");
        jTextField14.setText("");
        jTextField15.setText("");
        jTextField16.setText("");
        jTextField17.setText("");
        jTextField18.setText("");
        jTextField19.setText("");
        ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
        jList1.setListData(new String[0]);
        idLoad();
        jButton1.setEnabled(true);
    }

    private void setDate() {
        d = new Date();
        jLabel18.setText(sdf.format(d));
    }

    private void setTime() {
        Timer t = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                d1 = new Date();
                jLabel19.setText(sdf1.format(d1));
            }
        });
        t.start();
    }

    private void idLoad() {
        try {
            ResultSet rs = DB.search("select id from p_order order by id DESC");
            if (rs.next()) {
                jTextField1.setText(String.valueOf(Integer.parseInt(rs.getString("id")) + 1));
                jTextField2.setText(String.valueOf(Integer.parseInt(rs.getString("id")) + 1));
            } else {
                jTextField1.setText("1");
                jTextField2.setText("1");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
